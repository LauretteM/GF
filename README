NOTE ON NEW AFRIKAANS

   This fork was created in order to work on a new Afrikaans RG.
   The reason is that the Afrikaans was bootstrapped in a naive way from
   Dutch, which was in turn bootstrapped from German. However, many 
   grammatical complexities which exist in these two languages complicate
   the Afrikaans unnecessarily, making maintanence and extension costly.
   Furthermore, negation in Afrikaans differs significantly from both 
   Dutch and German. A more thorough-going approach to bootstrapping is 
   needed to produce a clean and correct RG for Afrikaans.


   In order to test the new RG with structural words added to ExtraAfr, a 
   temporary TestAfr grammar is included.

   Example usage:

   $ gf
   > i TestAfr.gf
   TestAfrAbs> gr -cat=S -number=20 | l

TODO (not ordered):
- Implement a new CAdv lincat to do "vinniger" and "meer vermetel"
  as well as a smart paradigm to know when to use which form.


DESCRIPTION

The Grammatical Framework (=GF) is a grammar formalism based on type theory. 
It consists of

    * a special-purpose programming language
    * a compiler of the language
    * a generic grammar processor 

The compiler reads GF grammars from user-provided files, and the 
generic grammar processor performs various tasks with the grammars:

    * generation
    * parsing
    * translation
    * type checking
    * computation
    * paraphrasing
    * random generation
    * syntax editing 

GF particularly addresses four aspects of grammars:

    * multilinguality (parallel grammars for different languages)
    * semantics (semantic conditions of well-formedness, semantic 
      properties of expressions) 
    * grammar engineering (modularity, abstractions, libraries)
    * embeddability in programs written in other languages (C,C++,
      Haskell, Java, JavaScript)


COMPILATION and INSTALLATION of source distribution:
See download/index.html for installation instructions.
(More details can be found in doc/gf-developers.html.)
